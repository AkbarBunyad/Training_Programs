//practice_single-row_subquery

select employee_id, first_name, last_name
from employees
where salary = (select max(salary) from employees);

//multi_row

select employee_id, first_name, last_name, department_id
from employees
where department_id in (select department_id from departments
where location_id in (select location_id from locations
where city = 'Seattle'));

//correlated

select employee_id, first_name, last_name, salary, department_id
from employees e_outer
where salary > (select avg(salary) from employees e_inner
where e_inner.department_id = e_outer.department_id);

//10 Feb 2024 clas scripts

select e.*, (select avg(salary) from employees where
    department_id = e.department_id) as avg_dep,
    (select avg(salary) from employees) as avg_cmp
    from employees e;
    
select avg(salary) from employees where department_id = 90;

select department_id, department_name from departments d
where exists (select 1 from employees e where
e.department_id = d.department_id);

select * from departments e
where not exists (select 1 from employees d where
    e.department_id = d.department_id);
    
select 2 from dual where 1 = 1;

select * from departments where department_id in
    (select department_id from employees);
    
//tasks

//write a SQL query to find all the orders issued by the salesman 'Paul Adam'. Return ord_no, purch_amt, ord_date, customer_id and salesman_id.
select * from orders where salesman_id = (select 
    salesman_id from salesman where name = 'Paul Adam');
    
//write a SQL query to find all orders generated by London-based salespeople. Return ord_no, purch_amt, ord_date, customer_id, salesman_id.
select * from orders where salesman_id = (
    select salesman_id from salesman where city = 'London');
    
//write a SQL query to find all orders generated by the salespeople who may work for customers whose id is 3007. Return ord_no, purch_amt, ord_date, customer_id, salesman_id.
select * from orders where salesman_id = (
    select salesman_id from orders where customer_id = 3007);
    
//write a SQL query to find the order values greater than the average order value of 10th October 2012. Return ord_no, purch_amt, ord_date, customer_id, salesman_id.
select * from orders where purch_amt > (select avg(purch_amt)
    from orders where ord_date = '10-OCT-12');
    
//5
select * from orders where salesman_id = (select salesman_id
    from salesman where city = 'New York');

//6
select commission from salesman where salesman_id in (select salesman_id
    from customer where city = 'Paris');
    
//7
select * from customer where customer_id = (select salesman_id - 2001
from salesman where name = 'Mc Lyon');

//8
select grade, count(*) as cnt from customer where grade > (select avg(grade)
from customer where city = 'New York') group by grade;

//9
select ord_no, purch_amt, ord_date, salesman_id from orders
where salesman_id = (select salesman_id from salesman where
commission = (select max(commission) from salesman));

//10
select o.*, c.cust_name from orders o, customer c where
o.customer_id = c.customer_id and o.ord_date = '17-AUG-12';

//11
select salesman_id, name from salesman where salesman_id in
(select salesman_id from customer group by salesman_id having count(*)>1);

select salesman_id, name from salesman s
where (select count(*) from customer o where o.salesman_id = s.salesman_id)>1;
//12
select * from orders where purch_amt > (select avg(purch_amt)
from orders);

//13
select * from orders where purch_amt >= (select avg(purch_amt)
from orders);

//14
select ord_date, sum(purch_amt) from orders o group by ord_date
having sum(purch_amt) > 
(select max(purch_amt) + 1000 from orders o2);

//15
select * from customer where exists (select 1 from customer
where city = 'London');

//16
select * from salesman s where (select count(*) from customer c
where c.salesman_id = s.salesman_id) > 1;

//17
select * from salesman s where (select count(*) from customer c
where c.salesman_id = s.salesman_id) = 2;

//18
select * from salesman s where (select count(*) from orders
where s.salesman_id = salesman_id)>1;

//19
select * from salesman s where salesman_id in
(select salesman_id from customer c1 where
(select count(*) from customer c2 where city = c1.city
and c1.salesman_id = c2.salesman_id)>1);
 
//20
select * from salesman where city in (select city from customer);

//21
select * from salesman where name < any(select cust_name from customer);

//22
select * from customer where grade > all(select grade from customer
where city < 'New York');

//23
select * from orders where purch_amt > any(select purch_amt
from orders where ord_date = '10-SEP-12');

//24
select * from orders where purch_amt < any(select purch_amt
from orders where customer_id in (select customer_id from customer
where city = 'London'));

//25
select * from orders where purch_amt < (select max(purch_amt)
from orders where customer_id in (select customer_id from customer
where city = 'London'));

//26
select * from customer where grade > all(select grade
from customer where city = 'New York');

//27
select name, city, (select sum (purch_amt)from orders o
where o.salesman_id=s.salesman_id)total_ord_amt from salesman s
where s.city in (select city from customer);
 
//28
select * from customer where grade not in(select grade from customer
where city = 'London');

//29
select * from customer where grade not in (select grade
from customer where city = 'Paris');

//30
select * from customer where grade not in (select grade
from customer where city = 'Dallas');

//31
select avg(pro_price), com_name from item_mast i, company_mast c
where c.com_id = i.pro_com group by com_name;

//32
select avg(pro_price), com_name from item_mast i,
company_mast c where c.com_id = i.pro_com group by com_name
having avg(pro_price) >=350;

//33
select pro_name, pro_price, com_name from item_mast i,
company_mast c where i.pro_com = c.com_id and pro_price in (select max(pro_price)
from item_mast group by pro_com);

//34
select * from emp_details where emp_lname in ('Gabriel', 'Dosio');

//35
select * from emp_details where emp_dept in (89, 63);

//36
select emp_fname, emp_lname from emp_details where emp_dept
in (select dpt_code from emp_department where dpt_allotment > 50000);

//37
select * from emp_department where dpt_allotment > (
select avg(dpt_allotment) from emp_department);

//38
select dpt_name from emp_department e1 where (
select count(*)from emp_details e2 where e1.dpt_code = e2.emp_dept)>2;

//39
select emp_fname, emp_lname from emp_details where
emp_dept = (select dpt_code from emp_department order by dpt_allotment
offset 1 row fetch next 1 row only);


//13 Feb 24 classwork

//table query
select * from (select * from employees where department_id = 90) a
where a.first_name = 'Lex';

select
    *
from employees e1
where salary = (select
                    max(salary)
                from employees e2
                where e2.department_id = e1.department_id);

select * from employees where (department_id, salary) in (select department_id,
max(salary) from employees group by department_id);

select e.*, (select avg(salary) from employees),
    e.salary/(select avg(salary) from employees)*100 from employees e;

select
    first_name, last_name, salary 
from employees e1
where salary = (select
                    max(salary)
                from employees e2
                where e2.department_id = e1.department_id);
                
            
select * from employees where salary > select avg(salary) from employees where department_id = 90();

select name, salesman_id from salesman where commission = (select min(commission) from salesman);

select (select count(*) from employees where salary > 9000) as cnt from dual;

select (select avg(purch_amt) from orders where customer_id in (select customer_id from orders group by customer_id having count(*) > 2)) as avg_amt from dual;

select * from (select employee_id, salary, email from employees) s where s.email like '%com%';

select * from (select * from employees) s where s.salary > 12000;

select a.salary - a.avg_s as difference from (select e.*, (select avg(salary) from employees) as avg_s from employees e) a;

SELECT department_id, department_name
FROM departments d
WHERE (
    SELECT COUNT(*)
    FROM employees
    WHERE department_id = d.department_id
) > (
    SELECT AVG(emp_count)
    FROM (
        SELECT department_id, COUNT(*) AS emp_count
        FROM employees
        GROUP BY department_id
    )
);

select * from orders o where o.customer_id in (select customer_id from customer c where c.salesman_id = o.salesman_id and o.purch_amt> 400);

select * from orders where customer_id in (select customer_id from customer where city  = salesman.city);

select * from employees where job_id in (select job_id from jobs where job_title = 'Programmer') order by hire date;

select * from departments where department_id not in (select nvl(department_id,0) from employees);

select salesman_id, name, city from salesman s where city in
(select city from customer where salesman_id = s.salesman_id);

//15 Feb practice

select * from employees where salary > any(select salary from employees where department_id = 100);

select * from employees where salary > all(select salary from employees where job_id = 'AD_VP');

select * from employees inner join departments on employees.department_id = departments.department_id;

select * from employees e where e.department_id in
    (select d.department_id from departments d
    where d.department_id = e.department_id);
    
select * from employees e right join departments d on e.department_id = d.department_id;

select * from employees e left join departments d on e.department_id = d.department_id;

select department_id from departments
minus
select department_id from employees;

select * from employees e
full join
departments d on e.department_id = d.department_id;

select * from employees cross join departments;

select * from employees natural join departments;

select * from employees join departments on employees.department_id = departments.department_id
    and departments.manager_id = employees.manager_id;
    
select * from employees join departments using(department_id);

----------------
select first_name, last_name, department_name from employees left join departments on employees.department_id = departments.department_id;

select first_name, last_name, job_title from employees e left join jobs d on d.job_id = e.job_id;

select first_name, last_name, job_title, department_name, city, region_name from employees join jobs on employees.job_id = jobs.job_id
left join departments on departments.department_id = employees.department_id
left join locations  on locations.location_id = departments.location_id
left join countries on countries.country_id =locations.country_id
left join regions on regions.region_id = countries.region_id ;